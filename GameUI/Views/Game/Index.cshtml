@model GameUI.Models.GameViewModel

@{
    ViewData["Title"] = "Index";
}

<style type="text/css">
    .board {
        width: 300px;
    }

    .wrapper, .main-wrapper {
        display: flex;
        margin: auto;
    }

    .item {
        flex-grow: 1;
        width: 100px;
        height: 100px;
        text-align: center;
        line-height: 100px;
        font-size: 50px;
    }

    .item:hover {
        cursor: pointer;
        background-color: #b6b6b6;
    }

    .border-bottom {
        border-bottom: 1px solid #000000;
    }

    .border-right {
        border-right: 1px solid #000000;
    }
</style>

<div class="main-wrapper">
    <div class="board">
        <h2>Current player: <span id="currentPlayer">@Html.DisplayFor(m => Model.CurrentPlayer)</span></h2>

        <div class="wrapper">
            <div class="item square1 border-bottom border-right" data-square="1">
                @Html.DisplayFor(m => Model.Square1)
            </div>
            <div class="item square2 border-bottom border-right" data-square="2">
                @Html.DisplayFor(m => Model.Square2)
            </div>
            <div class="item square3 border-bottom" data-square="3">
                @Html.DisplayFor(m => Model.Square3)
            </div>
        </div>
        <div class="wrapper">
            <div class="item square4 border-bottom border-right" data-square="4">
                @Html.DisplayFor(m => Model.Square4)
            </div>
            <div class="item square5 border-bottom border-right" data-square="5">
                @Html.DisplayFor(m => Model.Square5)
            </div>
            <div class="item square6 border-bottom" data-square="6">
                @Html.DisplayFor(m => Model.Square6)
            </div>
        </div>
        <div class="wrapper">
            <div class="item square7 border-right" data-square="7">
                @Html.DisplayFor(m => Model.Square7)
            </div>
            <div class="item square8 border-right" data-square="8">
                @Html.DisplayFor(m => Model.Square8)
            </div>
            <div class="item square9" data-square="9">
                @Html.DisplayFor(m => Model.Square9)
            </div>
        </div>
    </div>
    <div class="game-log">
        <h2>Game Log</h2>

        <div id="gameLog">
            <span id="currentGameLog">@Html.Raw(Model.CurrentGameLog)</span>
        </div>
    </div>
</div>

@section ScriptsGameController {
    <script type="text/javascript">
        $(document).ready(function () {
            $(".item").click(function () {
                var squareNumber = $(this).attr("data-square");                
                var elem = $(this);

                var data = JSON.stringify({
                    SquareNumber: squareNumber
                });

                $.ajax({
                    type: "POST",
                    url: "/api/apigame",
                    data: data,
                    contentType: "application/json",
                    success: function (data) {
                        if (data.status === "OK") {                            
                            $(elem).text($("#currentPlayer").text());
                            $("#currentPlayer").text(data.currentPlayer);
                            $("#currentGameLog").html(data.currentGameLog);

                            var square = ".square" + data.computer.square;
                            $(square).text(data.computer.player);
                        }
                    },
                    error: error
                });
            });
        });

        function error(xhr, error, status) {
            // console.log("xhr=" + JSON.stringify(xhr)); // ~ this is a stack trace
            console.log("error=" + error);
            console.log("status=" + status);
        }

    </script>
}
